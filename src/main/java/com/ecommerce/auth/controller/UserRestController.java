package com.ecommerce.auth.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ecommerce.auth.autil.JwtUtil;
import com.ecommerce.auth.entity.User;
import com.ecommerce.auth.entity.UserRequest;
import com.ecommerce.auth.entity.UserResponse;
import com.ecommerce.auth.service.IUserService;

@RestController
@RequestMapping("/user")
public class UserRestController {
	
	private final IUserService service;
	private final JwtUtil util;
	private final AuthenticationManager authenticationManager;
	
	//Constructor
	public UserRestController(IUserService service, JwtUtil util, AuthenticationManager authenticationManager) {
		this.service = service;
		this.util = util;
		this.authenticationManager = authenticationManager;
	}
	//1. save user Data in Database
	@PostMapping("/save")
	public ResponseEntity<String> saveUser(@RequestBody User user) {
		Integer id=service.saveUser(user);
		String body="User '"+id+"' saved";
		return new ResponseEntity<String>(body,HttpStatus.OK);
		//return ResponseEntity.ok(body);
	}
	//2.Validate User and Generate token
	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest request){
		
		//Validate un/pwd with database
		authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(request.getUsername(), request.getPassword()));
		
		String token=util.generateToken(request.getUsername());
		return ResponseEntity.ok(new UserResponse(token,"Success! Generated by Amazon"));
	}
	
}
